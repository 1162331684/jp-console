<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.exception.bom.mapper.ExceptionBomMapper">

	<sql id="exceptionBomColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.working_no AS "workingNo",
		a.brand AS "brand",
		a.sports_cat AS "sportsCat",
		a.product_name AS "productName",
		a.dev_region AS "devRegion",
		a.developer AS "developer",
		a.direct_development AS "directDevelopment",
		a.style_status AS "styleStatus",
		a.style_br_status AS "styleBrStatus",
		a.colorway_name AS "colorwayName",
		a.article AS "article",
		a.earliest_buy_ready AS "earliestBuyReady",
		a.colorway_status AS "colorwayStatus",
		a.fty_code AS "ftyCode",
		a.fty_name AS "ftyName",
		a.lo_for_fty AS "loForFty",
		a.fty_priority AS "ftyPriority",
		a.ref AS "ref",
		a.typename AS "typename",
		a.material AS "material",
		a.group_code AS "groupCode",
		a.short_name AS "shortName",
		a.coo AS "coo",
		a.lo AS "lo",
		a.supp_ref AS "suppRef",
		a.part_no AS "partNo",
		a.part_name AS "partName",
		a.sustainability AS "sustainability",
		a.level AS "level",
		a.yield AS "yield",
		a.supp_UOM AS "suppUom"
	</sql>

	<sql id="exceptionBomJoins">

		LEFT JOIN sys_user createBy ON createBy.id = a.create_by
		LEFT JOIN sys_user updateBy ON updateBy.id = a.update_by
	</sql>
	<sql id="exceptionBomInfoColumns">
		b.bom_id AS "bomId",
		b.lab_dip_status AS "labDipStatus",
		b.lab_dip_status_date AS "labDipStatusDate",
		b.lab_dip_remark AS "labDipRemark",
		b.material_remarks AS "materialRemarks",
		b.material_developer AS "materialDeveloper",
		b.mtl_supp_lifecycle_state AS "mtlSuppLifecycleState",
		b.management_model AS "managementModel",
		b.developer_location AS "developerLocation",
		b.material_orig_group AS "materialOrigGroup",
		b.material_description AS "materialDescription",
		b.color AS "color",
		b.main_material AS "mainMaterial",
		b.fiber_text AS "fiberText",
		b.fiber_text_position AS "fiberTextPosition",
		b.layer_comp AS "layerComp",
		b.supplier_lead_time AS "supplierLeadTime",
		b.lo_merch AS "loMerch",
		b.material_dev_type AS "materialDevType",
		b.material_typename AS "materialTypename",
		b.business_unit AS "businessUnit",
		b.layer_const AS "layerConst",
		b.first_colorway AS "firstColorway",
		b.flex_bom_linkid AS "flexBomLinkid",
		b.source_season_lead_time AS "sourceSeasonLeadTime",
		b.season AS "season",
		b.us_rainwear_status AS "usRainwearStatus",
		b.product_specialty AS "productSpecialty",
		b.global_mktg_fc AS "globalMktgFc",
		b.bom_remarks AS "bomRemarks",
		b.first_season AS "firstSeason",
		b.min_qty_color AS "minQtyColor",
		b.min_qty_order AS "minQtyOrder",
		b.supplier_width AS "supplierWidth",
		b.width_uom AS "widthUom",
		b.supp_ref_name AS "suppRefName",
		b.brand_partner AS "brandPartner",
		b.leadtime_remark AS "leadtimeRemark",
		b.lcs_remark AS "lcsRemark",
		b.ts_comments AS "tsComments",
		b.ts_commments_times AS "tsCommmentsTimes",
		b.garment_qa_comments AS "garmentQaComments",
		b.garment_qa_comment_time AS "garmentQaCommentTime",
		b.material_qas AS "materialQas",
		b.material_qss_time AS "materialQssTime",
		b.mer_team AS "merTeam",
		b.mer_team_time AS "merTeamTime",
		b.meeting_record AS "meetingRecord",
		b.meeting_record_time AS "meetingRecordTime"
	</sql>



	<select id="findById" resultType="com.jeeplus.exception.bom.service.dto.ExceptionBomDTO">
		SELECT
			<include refid="exceptionBomColumns"/>,
			<include refid="exceptionBomInfoColumns"/>
		FROM exception_bom a
		JOIN exception_bom_info b on b.bom_id = a.id
		<include refid="exceptionBomJoins"/>
		WHERE a.id = #{id} and a.del_flag = 0
	</select>

	<select id="findList" resultType="com.jeeplus.exception.bom.service.dto.ExceptionBomDTO">
		SELECT
			<include refid="exceptionBomColumns"/>,
			<include refid="exceptionBomInfoColumns"/>,c.status prTaskStatus,
		(select count(*) from qc_trf_item i join qc_trf t on t.id = i.qc_trf_id 
        join sys_dict_type dt on dt.type='ap_code' join sys_dict_value dv on dv.dict_type_id = dt.id and dv.label = t.factory 
        where t.working_no = a.working_no and t.article = a.article and b.season = t.season  and dv.value = a.fty_code
        and i.material_item_code = a.ref  and ifnull(i.color_code,'') = b.color and a.part_no=i.part_no  ) labCount
		FROM exception_bom a
		JOIN exception_bom_info b on b.bom_id = a.id
		left join exception_list c on c.bom_id = a.id
		<include refid="exceptionBomJoins"/>
	    ${ew.customSqlSegment}
	    order by ifnull(a.update_date,a.create_date) desc
	</select>
	
	<select id="findDtoList" resultType="com.jeeplus.exception.bom.service.dto.ExceptionBomDTO">
		SELECT
		<include refid="exceptionBomColumns"/>,
		<include refid="exceptionBomInfoColumns"/>
		FROM exception_bom a
		JOIN exception_bom_info b on b.bom_id = a.id
		left join exception_list c on c.bom_id = a.id
		<include refid="exceptionBomJoins"/>
		<where>
			a.del_flag = 0
			<if test="workingNo!=null and workingNo!=''">
				AND a.working_no = #{workingNo}
			</if>
			<if test="workingNo!=null and workingNo!=''">
				AND a.working_no = #{workingNo}
			</if>
			<if test="ref!=null and ref!=''">
				AND a.ref = #{ref}
			</if>
			<if test="article!=null and article!=''">
				AND a.article = #{article}
			</if>
			<if test="labDipStatus!=null and labDipStatus!=''">
				AND b.lab_dip_status = #{labDipStatus}
			</if>
			<if test="mtlSuppLifecycleState!=null and mtlSuppLifecycleState!=''">
				AND b.mtl_supp_lifecycle_state = #{mtlSuppLifecycleState}
			</if>
			<if test="brand!=null and brand!=''">
				AND a.brand = #{brand}
			</if>
			<if test="ftyCode!=null and ftyCode!=''">
				AND a.fty_code = #{ftyCode}
			</if>
			<if test="ids!=null and ids.size()>0">
				AND a.id IN
				<foreach collection="ids" separator="," item="item" open="(" close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>

	<select id="findListByMap" resultType="com.jeeplus.exception.bom.service.dto.ExceptionBomDTO">
		SELECT
		<include refid="exceptionBomColumns"/>,
		<include refid="exceptionBomInfoColumns"/>
		FROM exception_bom a
		JOIN exception_bom_info b on b.bom_id = a.id
		<include refid="exceptionBomJoins"/>
		<where>
			a.del_flag = '0'
			<if test="map!=null and map.keyList!=null and map.keyList.size()>0">
				AND CONCAT(a.working_no,'-',a.article,'-',a.ref,'-',b.lab_dip_status,'-',b.mtl_supp_lifecycle_state) IN
				<foreach collection="map.keyList" separator="," item="item" open="(" close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
	<insert id="saveList" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO exception_bom(
			create_by,
			create_date,
			del_flag,
			working_no,
			brand,
			sports_cat,
			product_name,
			dev_region,
			developer,
			direct_development,
			style_status,
			style_br_status,
			colorway_name,
			article,
			earliest_buy_ready,
			colorway_status,
			fty_code,
			fty_name,
			lo_for_fty,
			fty_priority,
			ref,
			typename,
			material,
			group_code,
			short_name,
			coo,
			lo,
			supp_ref,
			part_no,
			part_name,
			sustainability,
			`level`,
			yield,
			supp_uom
		) VALUES
		<foreach collection="list" item="item" separator=",">
		(
			#{item.createBy},
			#{item.createDate},
			#{item.delFlag},
			#{item.workingNo},
			#{item.brand},
			#{item.sportsCat},
			#{item.productName},
			#{item.devRegion},
			#{item.developer},
			#{item.directDevelopment},
			#{item.styleStatus},
			#{item.styleBrStatus},
			#{item.colorwayName},
			#{item.article},
			#{item.earliestBuyReady},
			#{item.colorwayStatus},
			#{item.ftyCode},
			#{item.ftyName},
			#{item.loForFty},
			#{item.ftyPriority},
			#{item.ref},
			#{item.typename},
			#{item.material},
			#{item.groupCode},
			#{item.shortName},
			#{item.coo},
			#{item.lo},
			#{item.suppRef},
			#{item.partNo},
			#{item.partName},
			#{item.sustainability},
			#{item.level},
			#{item.yield},
			#{item.suppUom}
		)
		</foreach>
	</insert>
	<update id="updateList">
		<foreach collection="list" item="item" separator=";">
			UPDATE exception_bom SET
			update_by = #{item.updateBy},
			update_date = #{item.updateDate},
			working_no = #{item.workingNo},
			brand = #{item.brand},
			sports_cat = #{item.sportsCat},
			product_name = #{item.productName},
			dev_region = #{item.devRegion},
			developer = #{item.developer},
			direct_development = #{item.directDevelopment},
			style_status = #{item.styleStatus},
			style_br_status = #{item.styleBrStatus},
			colorway_name = #{item.colorwayName},
			article = #{item.article},
			earliest_buy_ready = #{item.earliestBuyReady},
			colorway_status = #{item.colorwayStatus},
			fty_code = #{item.ftyCode},
			fty_name = #{item.ftyName},
			lo_for_fty = #{item.loForFty},
			fty_priority = #{item.ftyPriority},
			ref = #{item.ref},
			typename = #{item.typename},
			material = #{item.material},
			group_code = #{item.groupCode},
			short_name = #{item.shortName},
			coo = #{item.coo},
			lo = #{item.lo},
			supp_ref = #{item.suppRef},
			part_no = #{item.partNo},
			part_name = #{item.partName},
			sustainability = #{item.sustainability},
			`level` = #{item.level},
			yield = #{item.yield},
			supp_uom = #{item.suppUom}
			WHERE id = #{item.id}
		</foreach>
	</update>
</mapper>
